{
	"name": "df_Functions_Demo",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "DS_XML",
						"type": "DatasetReference"
					},
					"name": "source"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "DS_CSV",
						"type": "DatasetReference"
					},
					"name": "sink1"
				}
			],
			"transformations": [
				{
					"name": "derivedColumn1"
				},
				{
					"name": "flatten1"
				}
			],
			"udfLibraries": [
				{
					"referenceName": "LIB_Date",
					"type": "DataFlowReference"
				}
			],
			"scriptLines": [
				"source(output(",
				"          catalog as (book as ({@id} as string, author as string, datetime as timestamp, description as string, genre as string, price as double, publish_date as date, title as string)[])",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false,",
				"     validationMode: 'none',",
				"     namespaces: false) ~> source",
				"flatten1 derive(NewDate = GetDateVarchar(datetime,false()),",
				"          NewDateTime = GetDateVarchar(datetime,true())) ~> derivedColumn1",
				"source foldDown(unroll(catalog.book, catalog.book),",
				"     mapColumn(",
				"          {@id} = catalog.book.{@id},",
				"          author = catalog.book.author,",
				"          datetime = catalog.book.datetime,",
				"          description = catalog.book.description,",
				"          genre = catalog.book.genre,",
				"          price = catalog.book.price,",
				"          publish_date = catalog.book.publish_date,",
				"          title = catalog.book.title",
				"     ),",
				"     skipDuplicateMapInputs: false,",
				"     skipDuplicateMapOutputs: false) ~> flatten1",
				"derivedColumn1 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     input(",
				"          Column_1 as string,",
				"          Column_2 as string,",
				"          Column_3 as string,",
				"          Column_4 as string,",
				"          Column_5 as string,",
				"          Column_6 as string,",
				"          Column_7 as string",
				"     ),",
				"     partitionFileNames:[('test.csv')],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     mapColumn(",
				"          {@id},",
				"          author,",
				"          datetime,",
				"          description,",
				"          genre,",
				"          price,",
				"          publish_date,",
				"          title,",
				"          NewDate,",
				"          NewDateTime",
				"     ),",
				"     partitionBy('hash', 1)) ~> sink1"
			]
		}
	}
}